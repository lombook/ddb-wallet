<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinglitong.wallet.give.mapper.FrozenReleaseExcelSourceAmountMapper">
  <resultMap id="BaseResultMap" type="com.jinglitong.wallet.api.model.FrozenReleaseExcelSourceAmount">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="source_id" jdbcType="VARCHAR" property="sourceId" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="app_id" property="appId" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insertBatch" parameterType="java.util.List">
  insert into frozen_release_excel_source_amount
  (source_id,create_time,update_time,amount,app_id)
  values
  <foreach collection="list" index="index" item="sourceBean" separator=",">
    (
    #{sourceBean.sourceId},#{sourceBean.createTime},#{sourceBean.updateTime},#{sourceBean.amount},#{sourceBean.appId}
    )
  </foreach>
  </insert>
  
  <select id="selectBySourceId" resultMap="BaseResultMap">
    select * from frozen_release_excel_source_amount where source_id = #{sourceId}
  </select>

  <select id="updateByprivateAndupdateTime" resultMap="BaseResultMap">
    update frozen_release_excel_source_amount set amount =#{param1} ,update_time = #{param2}
    where id=#{param3}
  </select>
</mapper>